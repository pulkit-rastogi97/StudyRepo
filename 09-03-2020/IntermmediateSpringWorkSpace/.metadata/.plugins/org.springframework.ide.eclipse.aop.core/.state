<?xml version="1.0" encoding="UTF-8"?>
<aop-reference-model>
<aop-project name="JDBCDaoSupportDemo">
<aspect-definition advice-class-name="com.psl.aop.Logger" advice-method-name="logBefore" advice-type="BEFORE" aspect-end-line-number="35" aspect-name="logging" aspect-start-line-number="35" factory-id="org.springframework.ide.eclipse.aop.core.annotationAspectDefinitionElementFactory" file="/JDBCDaoSupportDemo/src/config.xml" pointcut-expression="execution(* com.psl.dao.EmployeeDao.*(..))" proxy-target-class="false">
<aop-reference advice-type="BEFORE" bean="1:BeansModel|2:JDBCDaoSupportDemo|3:src/config.xml|7:beans:12|8:dao:23" bean-file="/JDBCDaoSupportDemo/src/config.xml" bean-start-line="23" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/JDBCDaoSupportDemo/src/config.xml" source="=JDBCDaoSupportDemo/src&lt;com.psl.aop{Logger.java[Logger~logBefore" source-start-line="19" target="=JDBCDaoSupportDemo/src&lt;com.psl.dao{EmployeeDao.java[EmployeeDao~insertEmployee~QEmployee;" target-start-line="35"/>
<aop-reference advice-type="BEFORE" bean="1:BeansModel|2:JDBCDaoSupportDemo|3:src/config.xml|7:beans:12|8:dao:23" bean-file="/JDBCDaoSupportDemo/src/config.xml" bean-start-line="23" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/JDBCDaoSupportDemo/src/config.xml" source="=JDBCDaoSupportDemo/src&lt;com.psl.aop{Logger.java[Logger~logBefore" source-start-line="19" target="=JDBCDaoSupportDemo/src&lt;com.psl.dao{EmployeeDao.java[EmployeeDao~fetchEmployee" target-start-line="17"/>
</aspect-definition>
<aspect-definition advice-class-name="com.psl.aop.Logger" advice-method-name="logAfter" advice-type="AFTER" aspect-end-line-number="35" aspect-name="logging" aspect-start-line-number="35" factory-id="org.springframework.ide.eclipse.aop.core.annotationAspectDefinitionElementFactory" file="/JDBCDaoSupportDemo/src/config.xml" pointcut-expression="execution(* com.psl.dao.EmployeeDao.*(..))" proxy-target-class="false">
<aop-reference advice-type="AFTER" bean="1:BeansModel|2:JDBCDaoSupportDemo|3:src/config.xml|7:beans:12|8:dao:23" bean-file="/JDBCDaoSupportDemo/src/config.xml" bean-start-line="23" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/JDBCDaoSupportDemo/src/config.xml" source="=JDBCDaoSupportDemo/src&lt;com.psl.aop{Logger.java[Logger~logAfter" source-start-line="25" target="=JDBCDaoSupportDemo/src&lt;com.psl.dao{EmployeeDao.java[EmployeeDao~insertEmployee~QEmployee;" target-start-line="35"/>
<aop-reference advice-type="AFTER" bean="1:BeansModel|2:JDBCDaoSupportDemo|3:src/config.xml|7:beans:12|8:dao:23" bean-file="/JDBCDaoSupportDemo/src/config.xml" bean-start-line="23" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/JDBCDaoSupportDemo/src/config.xml" source="=JDBCDaoSupportDemo/src&lt;com.psl.aop{Logger.java[Logger~logAfter" source-start-line="25" target="=JDBCDaoSupportDemo/src&lt;com.psl.dao{EmployeeDao.java[EmployeeDao~fetchEmployee" target-start-line="17"/>
</aspect-definition>
<aspect-definition advice-class-name="com.psl.aop.Logger" advice-method-name="logError" advice-type="AFTER_THROWING" aspect-end-line-number="35" aspect-name="logging" aspect-start-line-number="35" factory-id="org.springframework.ide.eclipse.aop.core.annotationAspectDefinitionElementFactory" file="/JDBCDaoSupportDemo/src/config.xml" pointcut-expression="execution(* com.psl.dao.EmployeeDao.*(..))" proxy-target-class="false">
<aop-reference advice-type="AFTER_THROWING" bean="1:BeansModel|2:JDBCDaoSupportDemo|3:src/config.xml|7:beans:12|8:dao:23" bean-file="/JDBCDaoSupportDemo/src/config.xml" bean-start-line="23" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/JDBCDaoSupportDemo/src/config.xml" source="=JDBCDaoSupportDemo/src&lt;com.psl.aop{Logger.java[Logger~logError" source-start-line="31" target="=JDBCDaoSupportDemo/src&lt;com.psl.dao{EmployeeDao.java[EmployeeDao~insertEmployee~QEmployee;" target-start-line="35"/>
<aop-reference advice-type="AFTER_THROWING" bean="1:BeansModel|2:JDBCDaoSupportDemo|3:src/config.xml|7:beans:12|8:dao:23" bean-file="/JDBCDaoSupportDemo/src/config.xml" bean-start-line="23" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/JDBCDaoSupportDemo/src/config.xml" source="=JDBCDaoSupportDemo/src&lt;com.psl.aop{Logger.java[Logger~logError" source-start-line="31" target="=JDBCDaoSupportDemo/src&lt;com.psl.dao{EmployeeDao.java[EmployeeDao~fetchEmployee" target-start-line="17"/>
</aspect-definition>
<aspect-definition advice-class-name="com.psl.aop.Logger" advice-method-name="success" advice-type="AFTER_RETURNING" aspect-end-line-number="35" aspect-name="logging" aspect-start-line-number="35" factory-id="org.springframework.ide.eclipse.aop.core.annotationAspectDefinitionElementFactory" file="/JDBCDaoSupportDemo/src/config.xml" pointcut-expression="execution(* com.psl.dao.EmployeeDao.*(..))" proxy-target-class="false">
<aop-reference advice-type="AFTER_RETURNING" bean="1:BeansModel|2:JDBCDaoSupportDemo|3:src/config.xml|7:beans:12|8:dao:23" bean-file="/JDBCDaoSupportDemo/src/config.xml" bean-start-line="23" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/JDBCDaoSupportDemo/src/config.xml" source="=JDBCDaoSupportDemo/src&lt;com.psl.aop{Logger.java[Logger~success" source-start-line="37" target="=JDBCDaoSupportDemo/src&lt;com.psl.dao{EmployeeDao.java[EmployeeDao~insertEmployee~QEmployee;" target-start-line="35"/>
<aop-reference advice-type="AFTER_RETURNING" bean="1:BeansModel|2:JDBCDaoSupportDemo|3:src/config.xml|7:beans:12|8:dao:23" bean-file="/JDBCDaoSupportDemo/src/config.xml" bean-start-line="23" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/JDBCDaoSupportDemo/src/config.xml" source="=JDBCDaoSupportDemo/src&lt;com.psl.aop{Logger.java[Logger~success" source-start-line="37" target="=JDBCDaoSupportDemo/src&lt;com.psl.dao{EmployeeDao.java[EmployeeDao~fetchEmployee" target-start-line="17"/>
</aspect-definition>
<aspect-definition advice-class-name="com.psl.aop.InsertAspect" advice-method-name="insertTransaction(org.aspectj.lang.ProceedingJoinPoint)" advice-type="AROUND" aspect-end-line-number="34" aspect-name="insert" aspect-start-line-number="34" factory-id="org.springframework.ide.eclipse.aop.core.annotationAspectDefinitionElementFactory" file="/JDBCDaoSupportDemo/src/config.xml" pointcut-expression="execution(* com.psl.dao.EmployeeI.insertEmployee(..))" proxy-target-class="false">
<aop-reference advice-type="AROUND" bean="1:BeansModel|2:JDBCDaoSupportDemo|3:src/config.xml|7:beans:12|8:dao:23" bean-file="/JDBCDaoSupportDemo/src/config.xml" bean-start-line="23" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/JDBCDaoSupportDemo/src/config.xml" source="=JDBCDaoSupportDemo/src&lt;com.psl.aop{InsertAspect.java[InsertAspect~insertTransaction~QProceedingJoinPoint;" source-start-line="15" target="=JDBCDaoSupportDemo/src&lt;com.psl.dao{EmployeeDao.java[EmployeeDao~insertEmployee~QEmployee;" target-start-line="35"/>
</aspect-definition>
</aop-project>
<aop-project name="SpringTransactionManagement"/>
<aop-project name="SpringTransactionManagementAnnotation"/>
<aop-project name="AOPDemo">
<aspect-definition advice-class-name="com.psl.aop.Logger" advice-method-name="logBefore" advice-type="BEFORE" aspect-end-line-number="16" aspect-name="logging" aspect-start-line-number="16" factory-id="org.springframework.ide.eclipse.aop.core.annotationAspectDefinitionElementFactory" file="/AOPDemo/src/config.xml" pointcut-expression="execution(* com.psl.aop.BankImpl.g*(*))" proxy-target-class="false">
<aop-reference advice-type="BEFORE" bean="1:BeansModel|2:AOPDemo|3:src/config.xml|7:beans:12|8:bank:15" bean-file="/AOPDemo/src/config.xml" bean-start-line="15" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/AOPDemo/src/config.xml" source="=AOPDemo/src&lt;com.psl.aop{Logger.java[Logger~logBefore" source-start-line="19" target="=AOPDemo/src&lt;com.psl.aop{BankImpl.java[BankImpl~getBalance~I" target-start-line="14"/>
</aspect-definition>
<aspect-definition advice-class-name="com.psl.aop.Logger" advice-method-name="logAfter" advice-type="AFTER" aspect-end-line-number="16" aspect-name="logging" aspect-start-line-number="16" factory-id="org.springframework.ide.eclipse.aop.core.annotationAspectDefinitionElementFactory" file="/AOPDemo/src/config.xml" pointcut-expression="execution(* com.psl.aop.BankImpl.g*(*))" proxy-target-class="false">
<aop-reference advice-type="AFTER" bean="1:BeansModel|2:AOPDemo|3:src/config.xml|7:beans:12|8:bank:15" bean-file="/AOPDemo/src/config.xml" bean-start-line="15" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/AOPDemo/src/config.xml" source="=AOPDemo/src&lt;com.psl.aop{Logger.java[Logger~logAfter" source-start-line="25" target="=AOPDemo/src&lt;com.psl.aop{BankImpl.java[BankImpl~getBalance~I" target-start-line="14"/>
</aspect-definition>
<aspect-definition advice-class-name="com.psl.aop.Logger" advice-method-name="success" advice-type="AFTER_RETURNING" aspect-end-line-number="16" aspect-name="logging" aspect-start-line-number="16" factory-id="org.springframework.ide.eclipse.aop.core.annotationAspectDefinitionElementFactory" file="/AOPDemo/src/config.xml" pointcut-expression="execution(* com.psl.aop.BankImpl.g*(*))" proxy-target-class="false">
<aop-reference advice-type="AFTER_RETURNING" bean="1:BeansModel|2:AOPDemo|3:src/config.xml|7:beans:12|8:bank:15" bean-file="/AOPDemo/src/config.xml" bean-start-line="15" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/AOPDemo/src/config.xml" source="=AOPDemo/src&lt;com.psl.aop{Logger.java[Logger~success" source-start-line="37" target="=AOPDemo/src&lt;com.psl.aop{BankImpl.java[BankImpl~getBalance~I" target-start-line="14"/>
</aspect-definition>
<aspect-definition advice-class-name="com.psl.aop.TransferAspect" advice-method-name="transferTransaction(org.aspectj.lang.ProceedingJoinPoint, int, int, double)" advice-type="AROUND" aspect-end-line-number="17" aspect-name="transfer" aspect-start-line-number="17" factory-id="org.springframework.ide.eclipse.aop.core.annotationAspectDefinitionElementFactory" file="/AOPDemo/src/config.xml" pointcut-expression="execution(* com.psl.aop.BankImpl.transfer(int,int,double)) and args(creditActNo,debitActNo,Amt)" proxy-target-class="false">
<aop-reference advice-type="AROUND" bean="1:BeansModel|2:AOPDemo|3:src/config.xml|7:beans:12|8:bank:15" bean-file="/AOPDemo/src/config.xml" bean-start-line="15" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/AOPDemo/src/config.xml" source="=AOPDemo/src&lt;com.psl.aop{TransferAspect.java[TransferAspect~transferTransaction~QProceedingJoinPoint;~I~I~D" source-start-line="11" target="=AOPDemo/src&lt;com.psl.aop{BankImpl.java[BankImpl~transfer~I~I~D" target-start-line="7"/>
</aspect-definition>
<aspect-definition advice-class-name="com.psl.aop.Logger" advice-method-name="logError" advice-type="AFTER_THROWING" aspect-end-line-number="16" aspect-name="logging" aspect-start-line-number="16" factory-id="org.springframework.ide.eclipse.aop.core.annotationAspectDefinitionElementFactory" file="/AOPDemo/src/config.xml" pointcut-expression="execution(* com.psl.aop.BankImpl.g*(*))" proxy-target-class="false">
<aop-reference advice-type="AFTER_THROWING" bean="1:BeansModel|2:AOPDemo|3:src/config.xml|7:beans:12|8:bank:15" bean-file="/AOPDemo/src/config.xml" bean-start-line="15" factory-id="org.springframework.ide.eclipse.aop.core.aopReferenceElementFactory" file="/AOPDemo/src/config.xml" source="=AOPDemo/src&lt;com.psl.aop{Logger.java[Logger~logError" source-start-line="31" target="=AOPDemo/src&lt;com.psl.aop{BankImpl.java[BankImpl~getBalance~I" target-start-line="14"/>
</aspect-definition>
</aop-project>
</aop-reference-model>